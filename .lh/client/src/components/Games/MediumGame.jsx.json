{
    "sourceFile": "client/src/components/Games/MediumGame.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 21,
            "patches": [
                {
                    "date": 1699143571688,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1699144334744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import handleSpeech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n+        Stop\r\n+      </Button>\r\n+\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699144339838,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import handleSpeech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699144355228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -45,9 +45,9 @@\n       </Button>\r\n       <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n         Word Speak\r\n       </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => stopSpeech()}>\r\n         Stop\r\n       </Button>\r\n       <Input \r\n         placeholder=\"Type your word here...\"\r\n@@ -62,132 +62,4 @@\n   );\r\n };\r\n \r\n export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import handleSpeech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n-        Stop\r\n-      </Button>\r\n-\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import handleSpeech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n"
                },
                {
                    "date": 1699144368428,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import handleSpeech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699144454210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import handleSpeech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699144924062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import handleSpeech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => Speech.handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => Speech.handleSpeech(data.definition)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => Speech.stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699144956760,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,7 @@\n import { useState, useEffect } from 'react';\r\n import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import handleSpeech from '../Speech';\r\n+import Speech from '../Speech';\r\n import GameService from '../../services/gameService'\r\n \r\n \r\n const MediumGame = () => {\r\n"
                },
                {
                    "date": 1699144983348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import speech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699145683004,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import speech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.word)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699145737620,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import speech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.wordOfTheDay)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699145759552,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import speech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.wordOfTheDay)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699145775964,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import speech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.wordOfTheDay)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699145859435,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import speech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.wordOfTheDay)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699145940663,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import speech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699145982163,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,66 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import speech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+  const [color, setColor] = useState(\"red\");\r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699145999261,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,78 +5,14 @@\n \r\n \r\n const MediumGame = () => {\r\n   const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n   const [color, setColor] = useState(\"red\");\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n-        Stop\r\n-      </Button>\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import speech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n   const [data, setData] = useState({\r\n     options: [],\r\n   });\r\n   const walletID = \"\"\r\n+  \r\n \r\n   useEffect(() => {\r\n     const fetchData = async () => {\r\n       setData( await GameService.getGameDetails())\r\n@@ -128,654 +64,4 @@\n   );\r\n };\r\n \r\n export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import speech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.wordOfTheDay)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n-        Stop\r\n-      </Button>\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import speech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.wordOfTheDay)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n-        Stop\r\n-      </Button>\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import speech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.wordOfTheDay)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n-        Stop\r\n-      </Button>\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import speech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.wordOfTheDay)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n-        Stop\r\n-      </Button>\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import speech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.word)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n-        Stop\r\n-      </Button>\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import speech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n-        Stop\r\n-      </Button>\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import Speech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => Speech.handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => Speech.handleSpeech(data.definition)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => Speech.stopSpeech()}>\r\n-        Stop\r\n-      </Button>\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import handleSpeech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => stopSpeech()}>\r\n-        Stop\r\n-      </Button>\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import handleSpeech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => stopSpeech()}>\r\n-        Stop\r\n-      </Button>\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n-import { useState, useEffect } from 'react';\r\n-import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n-import handleSpeech from '../Speech';\r\n-import GameService from '../../services/gameService'\r\n-\r\n-\r\n-const MediumGame = () => {\r\n-  const [sentence, setSentence] = useState('');\r\n-  const [data, setData] = useState({\r\n-    options: [],\r\n-  });\r\n-  const walletID = \"\"\r\n-\r\n-  useEffect(() => {\r\n-    const fetchData = async () => {\r\n-      setData( await GameService.getGameDetails())\r\n-      console.log(data);\r\n-    };\r\n-    fetchData()\r\n-  }, []);\r\n-\r\n-  function onSentenceSubmit (sentence) {\r\n-    const returned = {\r\n-      word: data.wordOfTheDay,\r\n-      difficulty: \"medium\",\r\n-      answer: sentence,\r\n-      wordDate: data.wordDate,\r\n-      walletID: walletID\r\n-    }\r\n-    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n-  }\r\n-\r\n-  return (\r\n-    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n-      <Flex>\r\n-        <Spacer />\r\n-        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n-        <Spacer />\r\n-      </Flex>\r\n-      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n-      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n-      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n-        Definition Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n-        Word Speak\r\n-      </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => stopSpeech()}>\r\n-        Stop\r\n-      </Button>\r\n-      <Input \r\n-        placeholder=\"Type your word here...\"\r\n-        value={sentence}\r\n-        onChange={(e) => setSentence(e.target.value)}\r\n-      />\r\n-      </Flex>\r\n-      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n-        Submit\r\n-      </Button>\r\n-    </Box>\r\n-  );\r\n-};\r\n-\r\n-export default MediumGame;\r\n"
                },
                {
                    "date": 1699146011746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import speech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [, ] = useState(\"red\");\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+  \r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699146218593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,67 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import speech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [buttonClicked, setButtonClicked] = useState(false);\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+  \r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n+        Stop\r\n+      </Button>\r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                },
                {
                    "date": 1699146651190,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,9 +41,9 @@\n       </Flex>\r\n       <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n       <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n       <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition, setButtonClicked)}>\r\n         Definition Speak\r\n       </Button>\r\n       <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition)}>\r\n         Word Speak\r\n"
                },
                {
                    "date": 1699147948526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,11 +47,9 @@\n       </Button>\r\n       <Button mt={4} colorScheme='yellow' onClick={() => speech.handleSpeech(data.definition, setButtonClicked)}>\r\n         Word Speak\r\n       </Button>\r\n-      <Button mt={4} colorScheme='yellow' onClick={() => speech.stopSpeech()}>\r\n-        Stop\r\n-      </Button>\r\n+      \r\n       <Input \r\n         placeholder=\"Type your word here...\"\r\n         value={sentence}\r\n         onChange={(e) => setSentence(e.target.value)}\r\n"
                },
                {
                    "date": 1699147975094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,65 @@\n+import { useState, useEffect } from 'react';\r\n+import { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\n+import handleSpeech from '../Speech';\r\n+import GameService from '../../services/gameService'\r\n+\r\n+\r\n+const MediumGame = () => {\r\n+  const [sentence, setSentence] = useState('');\r\n+  const [buttonClicked, setButtonClicked] = useState(false);\r\n+  const [data, setData] = useState({\r\n+    options: [],\r\n+  });\r\n+  const walletID = \"\"\r\n+  \r\n+\r\n+  useEffect(() => {\r\n+    const fetchData = async () => {\r\n+      setData( await GameService.getGameDetails())\r\n+      console.log(data);\r\n+    };\r\n+    fetchData()\r\n+  }, []);\r\n+\r\n+  function onSentenceSubmit (sentence) {\r\n+    const returned = {\r\n+      word: data.wordOfTheDay,\r\n+      difficulty: \"medium\",\r\n+      answer: sentence,\r\n+      wordDate: data.wordDate,\r\n+      walletID: walletID\r\n+    }\r\n+    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n+  }\r\n+\r\n+  return (\r\n+    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n+      <Flex>\r\n+        <Spacer />\r\n+        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n+        <Spacer />\r\n+      </Flex>\r\n+      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n+      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n+      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition, setButtonClicked)}>\r\n+        Definition Speak\r\n+      </Button>\r\n+      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition, setButtonClicked)}>\r\n+        Word Speak\r\n+      </Button>\r\n+      \r\n+      <Input \r\n+        placeholder=\"Type your word here...\"\r\n+        value={sentence}\r\n+        onChange={(e) => setSentence(e.target.value)}\r\n+      />\r\n+      </Flex>\r\n+      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n+        Submit\r\n+      </Button>\r\n+    </Box>\r\n+  );\r\n+};\r\n+\r\n+export default MediumGame;\r\n"
                }
            ],
            "date": 1699143571688,
            "name": "Commit-0",
            "content": "import { useState, useEffect } from 'react';\r\nimport { Box, Text, Input, Button, Flex, Spacer, Heading } from '@chakra-ui/react';\r\nimport handleSpeech from '../Speech';\r\nimport GameService from '../../services/gameService'\r\n\r\n\r\nconst MediumGame = () => {\r\n  const [sentence, setSentence] = useState('');\r\n  const [data, setData] = useState({\r\n    options: [],\r\n  });\r\n  const walletID = \"\"\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setData( await GameService.getGameDetails())\r\n      console.log(data);\r\n    };\r\n    fetchData()\r\n  }, []);\r\n\r\n  function onSentenceSubmit (sentence) {\r\n    const returned = {\r\n      word: data.wordOfTheDay,\r\n      difficulty: \"medium\",\r\n      answer: sentence,\r\n      wordDate: data.wordDate,\r\n      walletID: walletID\r\n    }\r\n    console.log(`word: ${returned.word} | diff: ${returned.difficulty} | ans: ${returned.answer} | `)\r\n  }\r\n\r\n  return (\r\n    <Box p={5} shadow=\"md\" borderWidth=\"1px\">\r\n      <Flex>\r\n        <Spacer />\r\n        <Heading fontSize=\"2xl\">Medium Mode</Heading>\r\n        <Spacer />\r\n      </Flex>\r\n      <Text fontSize=\"lg\" fontWeight=\"bold\">Remember the Word</Text>\r\n      <Text mb={4}>Spell the word correctly after hearing it.</Text>\r\n      <Flex columnGap=\"2px\" alignItems=\"flex-end\">\r\n      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n        Definition Speak\r\n      </Button>\r\n      <Button mt={4} colorScheme='yellow' onClick={() => handleSpeech(data.definition)}>\r\n        Word Speak\r\n      </Button>\r\n      <Input \r\n        placeholder=\"Type your word here...\"\r\n        value={sentence}\r\n        onChange={(e) => setSentence(e.target.value)}\r\n      />\r\n      </Flex>\r\n      <Button mt={4} colorScheme=\"teal\" onClick={() => onSentenceSubmit(sentence)}>\r\n        Submit\r\n      </Button>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default MediumGame;\r\n"
        }
    ]
}